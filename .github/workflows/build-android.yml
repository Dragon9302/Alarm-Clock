name: Build Android APK

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'

    - name: Setup Java
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '17'

    - name: Cache npm dependencies
      uses: actions/cache@v3
      with:
        path: ~/.npm
        key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-

    - name: Cache Gradle packages
      uses: actions/cache@v3
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-

    - name: Install dependencies
      run: npm ci

    - name: Copy files to www directory
      run: |
        mkdir -p www
        cp index.html www/
        cp styles.css www/
        cp script.js www/
        cp manifest.json www/
        cp sw.js www/

    - name: Build web assets
      run: npm run build 2>/dev/null || echo "No build script found, using static files"

    - name: Setup Android SDK
      uses: android-actions/setup-android@v3

    - name: Sync Capacitor
      run: npx cap sync android

    - name: Build Android APK
      run: |
        cd android
        chmod +x gradlew
        ./gradlew assembleDebug

    - name: Upload APK artifact
      uses: actions/upload-artifact@v4
      with:
        name: alarm-clock-apk
        path: android/app/build/outputs/apk/debug/app-debug.apk

    - name: Create Release
      if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master')
      uses: actions/create-release@v1
      id: create_release
      with:
        draft: false
        prerelease: false
        release_name: Release ${{ github.ref }}
        tag_name: ${{ github.run_number }}
      env:
        GITHUB_TOKEN: ${{ github.token }}

    - name: Upload Release Asset
      if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master')
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ github.token }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: android/app/build/outputs/apk/debug/app-debug.apk
        asset_name: alarm-clock.apk
        asset_content_type: application/vnd.android.package-archive
